/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.chat.e2e;

import javax.swing.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;

/**
 *
 * @author Soubhik
 */
public class ChatMessagesListReceivedTextComponent extends javax.swing.JPanel {

    private String messageID;

    public String getMessageID()
    {
        return messageID;
    }

    /**
     * Creates new form ChatMessagesListReceivedTestComponent
     */
    public ChatMessagesListReceivedTextComponent(String ID) {
        initComponents();
        receivedMessageTextLabel.setContentType("text/html");
        messageID = ID;
        //receivedTextLabel.setText("<html>placeholderReceivedText");
        //receivedTextLabel.setPreferredSize(new java.awt.Dimension(135, 15));
        //receivedTextLabel.setSize(receivedTextLabel.getPreferredSize());
        receivedMessageTextLabel.setBackground(receivedMessageTextLabel.getBackground().brighter());
        receivedMessageTextLabel.setOpaque(true);
//        timestampBottomLabel.setBackground(timestampBottomLabel.getBackground().brighter());
//        timestampBottomLabel.setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        receivedMessageTextLabel = new javax.swing.JTextPane();
        emptySideLabel2 = new javax.swing.JLabel();
        emptySideLabel1 = new javax.swing.JLabel();
        timestampBottomLabel = new javax.swing.JLabel();

        receivedMessageTextLabel.setEditable(false);
        receivedMessageTextLabel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        receivedMessageTextLabel.setText("placeholder Received Text ");
        receivedMessageTextLabel.setAutoscrolls(false);
        receivedMessageTextLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        receivedMessageTextLabel.setMargin(new java.awt.Insets(2, 2, 2, 2));
        receivedMessageTextLabel.setOpaque(false);
        receivedMessageTextLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                receivedMessageTextLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                receivedMessageTextLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                receivedMessageTextLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                receivedMessageTextLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                receivedMessageTextLabelMouseReleased(evt);
            }
        });

        timestampBottomLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        timestampBottomLabel.setText("placeholder Timestamp");
        timestampBottomLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timestampBottomLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                timestampBottomLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                timestampBottomLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                timestampBottomLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                timestampBottomLabelMouseReleased(evt);
            }
        });
        timestampBottomLabel.addPropertyChangeListener("text", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                timestampBottomLabel.removePropertyChangeListener("text", this);
                formatTimestamp();
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(receivedMessageTextLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(75, 75, 75)
                                                .addComponent(timestampBottomLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGap(28, 28, 28)
                                .addComponent(emptySideLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(emptySideLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(receivedMessageTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(timestampBottomLabel)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(emptySideLabel2)
                                        .addComponent(emptySideLabel1))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>

    private void formatTimestamp()
    {
        LocalDate currentDate = LocalDate.now();
        LocalDate givenDate = (new Timestamp(Long.parseLong(timestampBottomLabel.getText()))).toLocalDateTime().toLocalDate();
        LocalTime givenTime = (new Timestamp(Long.parseLong(timestampBottomLabel.getText()))).toLocalDateTime().toLocalTime();
        if(givenDate.getYear() == currentDate.getYear() && givenDate.getMonthValue() == currentDate.getMonthValue() && givenDate.getDayOfMonth() == currentDate.getDayOfMonth())
        {
            timestampBottomLabel.setText(givenTime.format(DateTimeFormatter.ofPattern("hh:mm a")).toUpperCase());
        }
        else
        {
            timestampBottomLabel.setText(givenTime.format(DateTimeFormatter.ofPattern("hh:mm a")).toUpperCase() + " on " + givenDate.format(DateTimeFormatter.ofPattern("dd/MM/yy")));
        }
        timestampBottomLabel.setToolTipText(givenTime.format(DateTimeFormatter.ofPattern("hh:mm a")).toUpperCase() + " on " + givenDate.format(DateTimeFormatter.ofPattern("dd/MM/yy")));
    }

    private void receivedMessageTextLabelMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void receivedMessageTextLabelMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void receivedMessageTextLabelMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void receivedMessageTextLabelMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void receivedMessageTextLabelMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void timestampBottomLabelMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void timestampBottomLabelMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void timestampBottomLabelMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void timestampBottomLabelMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void timestampBottomLabelMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    public JTextPane getMessageContentLabel()
    {
        return receivedMessageTextLabel;
    }

    public JLabel getMessageTimestampLabel()
    {
        return timestampBottomLabel;
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel emptySideLabel1;
    private javax.swing.JLabel emptySideLabel2;
    private javax.swing.JTextPane receivedMessageTextLabel;
    private javax.swing.JLabel timestampBottomLabel;
    // End of variables declaration
}
