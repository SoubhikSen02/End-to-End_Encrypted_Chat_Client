/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.chat.e2e;

import javax.swing.*;
import java.awt.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.Timestamp;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Objects;

/**
 *
 * @author Soubhik
 */
public class ChatListComponentPanel extends javax.swing.JPanel {

    private String chatID;

    public String getChatID()
    {
        return chatID;
    }

    private boolean isActive = false;

    public boolean getActiveStatus()
    {
        return isActive;
    }

    public void setActiveStatus(boolean activeStatus)
    {
        isActive = activeStatus;
    }

    ChatMainPanel parentPanel;

    /**
     * Creates new form chatListComponentPanel
     */
    public ChatListComponentPanel(String ID, ChatMainPanel parentPanel) {
        initComponents();
        this.parentPanel = parentPanel;
        chatID = ID;
        chatLastMessageLabel.setEnabled(false);
        chatLastMessageTimestamp.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        chatIconLabel = new javax.swing.JLabel();
        chatNameLabel = new javax.swing.JLabel();
        chatLastMessageLabel = new javax.swing.JLabel();
        chatLastMessageTimestamp = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());
        setToolTipText("");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });

        chatIconLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chatIconLabel.setIcon(new javax.swing.ImageIcon(Objects.requireNonNull(ChatListComponentPanel.class.getClassLoader().getResource("user.png")))); // NOI18N
        chatIconLabel.setToolTipText("");
        chatIconLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatIconLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chatIconLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chatIconLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                chatIconLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chatIconLabelMouseReleased(evt);
            }
        });

        chatNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        chatNameLabel.setText("placeholderName");
        chatNameLabel.setToolTipText("placeholderNameFull");
        chatNameLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatNameLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chatNameLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chatNameLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                chatNameLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chatNameLabelMouseReleased(evt);
            }
        });

        chatLastMessageLabel.setText("placeholderLastMessage");
        chatLastMessageLabel.setToolTipText("placeholderLastMessageFull");
        chatLastMessageLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        chatLastMessageLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatLastMessageLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chatLastMessageLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chatLastMessageLabelMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                chatLastMessageLabelMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chatLastMessageLabelMouseReleased(evt);
            }
        });

        chatLastMessageTimestamp.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        chatLastMessageTimestamp.setText("placeholderTimestampOnlyTimeOrDateIfNotToday");
        chatLastMessageTimestamp.setToolTipText("placeholderTimestampFull");
        chatLastMessageTimestamp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chatLastMessageTimestampMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                chatLastMessageTimestampMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                chatLastMessageTimestampMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                chatLastMessageTimestampMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                chatLastMessageTimestampMouseReleased(evt);
            }
        });
        chatLastMessageTimestamp.addPropertyChangeListener("text", new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                chatLastMessageTimestamp.removePropertyChangeListener("text", this);
                formatTimestamp();
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(chatIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(chatNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chatLastMessageTimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(chatLastMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(chatNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(chatLastMessageTimestamp, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(chatLastMessageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(chatIconLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>

    private void formatTimestamp()
    {
        LocalDate currentDate = LocalDate.now();
        LocalDate givenDate = (new Timestamp(Long.parseLong(chatLastMessageTimestamp.getText()))).toLocalDateTime().toLocalDate();
        LocalTime givenTime = (new Timestamp(Long.parseLong(chatLastMessageTimestamp.getText()))).toLocalDateTime().toLocalTime();
        if(givenDate.getYear() == currentDate.getYear() && givenDate.getMonthValue() == currentDate.getMonthValue() && givenDate.getDayOfMonth() == currentDate.getDayOfMonth())
        {
            chatLastMessageTimestamp.setText(givenTime.format(DateTimeFormatter.ofPattern("hh:mm a")).toUpperCase());
        }
        else
        {
            chatLastMessageTimestamp.setText(givenDate.format(DateTimeFormatter.ofPattern("dd/MM/yy")));
        }
        chatLastMessageTimestamp.setToolTipText(givenTime.format(DateTimeFormatter.ofPattern("hh:mm a")).toUpperCase() + " on " + givenDate.format(DateTimeFormatter.ofPattern("dd/MM/yy")));
    }

    private void makeChatActive()
    {
        parentPanel.makeChatComponentActive(this);
    }

    public void highlightPanel()
    {
        if(!isActive)
            setBackground(getBackground().brighter());
    }

    public void dehighlightPanel()
    {
        if(!isActive)
            setBackground((new JPanel()).getBackground());
    }

    private void formMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)) {
            if (!isActive)
                makeChatActive();
        }
    }

    private void formMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        highlightPanel();
    }

    private void formMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        dehighlightPanel();
    }

    private void formMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void formMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatNameLabelMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)) {
            if (!isActive)
                makeChatActive();
        }
    }

    private void chatNameLabelMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        highlightPanel();
    }

    private void chatNameLabelMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        dehighlightPanel();
    }

    private void chatLastMessageLabelMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)) {
            if (!isActive)
                makeChatActive();
        }
    }

    private void chatLastMessageLabelMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        highlightPanel();
    }

    private void chatLastMessageLabelMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        dehighlightPanel();
    }

    private void chatIconLabelMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)) {
            if (!isActive)
                makeChatActive();
        }
    }

    private void chatIconLabelMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        highlightPanel();
    }

    private void chatIconLabelMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        dehighlightPanel();
    }

    private void chatNameLabelMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatNameLabelMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatLastMessageLabelMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatLastMessageLabelMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatIconLabelMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatIconLabelMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatLastMessageTimestampMouseClicked(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        if(SwingUtilities.isLeftMouseButton(evt)) {
            if (!isActive)
                makeChatActive();
        }
    }

    private void chatLastMessageTimestampMouseEntered(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        highlightPanel();
    }

    private void chatLastMessageTimestampMouseExited(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
        dehighlightPanel();
    }

    private void chatLastMessageTimestampMousePressed(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }

    private void chatLastMessageTimestampMouseReleased(java.awt.event.MouseEvent evt) {
        // TODO add your handling code here:
    }


    public JLabel getChatIconLabel()
    {
        return chatIconLabel;
    }

    public JLabel getChatNameLabel()
    {
        return chatNameLabel;
    }

    public JLabel getChatLastMessageTimestamp()
    {
        return  chatLastMessageTimestamp;
    }

    public JLabel getChatLastMessageLabel()
    {
        return chatLastMessageLabel;
    }

    // Variables declaration - do not modify
    private javax.swing.JLabel chatIconLabel;
    private javax.swing.JLabel chatLastMessageLabel;
    private javax.swing.JLabel chatLastMessageTimestamp;
    private javax.swing.JLabel chatNameLabel;
    // End of variables declaration
}
